{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.module.scss","components/Container/Container.module.scss","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Statistics","options","total","positivePercentage","Object","keys","map","el","FeedbackOptions","onLeaveFeedback","className","s","buttonsWrapper","button","type","onClick","Section","title","children","section","sectionTitle","Notification","message","Container","container","App","useState","good","setgood","neutral","setneutral","bad","setbad","countTotalFeedback","currentTarget","innerText","toLowerCase","state","console","log","Math","round","ReactDOM","render","document","getElementById"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,eAAiB,wCAAwC,OAAS,kC,gBCApFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,iBCApED,EAAOC,QAAU,CAAC,UAAY,+B,4GC4BfC,EA3BI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACpC,OACE,qCACGC,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GACxB,OACE,8BACE,iCAAOA,EAAP,QACA,iCAAON,EAAQM,GAAf,SAFMA,MAMZ,8BACE,2CACA,+BAAOL,OAET,8BACE,wDACA,iCAAOC,EAAP,e,gBCQOK,EAxBS,SAAC,GAAkC,IAAhCP,EAA+B,EAA/BA,QAASQ,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,eAAlB,SACGX,EAAQK,KAAI,SAAAC,GACX,OACE,wBACEG,UAAWC,IAAEE,OAEbC,KAAK,SACLC,QAASN,EAJX,SAMGF,GAJIA,S,gBCCFS,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKR,UAAWC,IAAEQ,QAAlB,UACE,oBAAIT,UAAWC,IAAES,aAAjB,SAAgCH,IAC/BC,MCJQG,EAHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,K,gBCSEC,EAPG,SAAC,GAAkB,IAAhBL,EAAe,EAAfA,SACnB,OAAO,qBAAKR,UAAWC,IAAEa,UAAlB,SAA8BN,KCIxB,SAASO,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBC,EADqB,KACfC,EADe,OAEEF,mBAAS,GAFX,mBAErBG,EAFqB,KAEZC,EAFY,OAGNJ,mBAAS,GAHH,mBAGrBK,EAHqB,KAGhBC,EAHgB,KAItBC,EAAqB,WACzB,OAAON,EAAOE,EAAUE,GA2B1B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CACEhB,QAAS,CAAC,OAAQ,UAAW,OAC7BQ,gBAvBgB,SAAC,GAEvB,OAF6C,EAApByB,cACUC,UAAUC,eAE3C,IAAK,OACHR,GAAQ,SAAAS,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHP,GAAW,SAAAO,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHL,GAAO,SAAAK,GAAK,OAAIA,EAAQ,KACxB,MAEF,QACEC,QAAQC,IAAI,wBAYY,IAAzBN,IACC,cAAC,EAAD,CAAShB,MAAM,aAAf,SACE,cAAC,EAAD,CACEhB,QAAS,CAAE0B,KAAMA,EAAMI,IAAKA,EAAKF,QAASA,GAC1C3B,MAAO+B,IACP9B,mBApCD8B,IACHO,KAAKC,MAAOd,EAAOM,IAAwB,KAC3C,MAsCA,cAAC,EAAD,CAAcX,QAAQ,yBC5C9BoB,IAASC,OAAO,cAAClB,EAAD,IAASmB,SAASC,eAAe,W","file":"static/js/main.e3054dd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsWrapper\":\"FeedbackOptions_buttonsWrapper__2oHkZ\",\"button\":\"FeedbackOptions_button__36msz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__qEKYh\",\"sectionTitle\":\"Section_sectionTitle__Hprlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__67bMm\"};","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ options, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map(el => {\r\n        return (\r\n          <p key={el}>\r\n            <span>{el}: </span>\r\n            <span>{options[el]} </span>\r\n          </p>\r\n        );\r\n      })}\r\n      <p>\r\n        <span>Total: </span>\r\n        <span>{total}</span>\r\n      </p>\r\n      <p>\r\n        <span>Positive feedbacks: </span>\r\n        <span>{positivePercentage} %</span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import s from './FeedbackOptions.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.buttonsWrapper}>\r\n      {options.map(el => {\r\n        return (\r\n          <button\r\n            className={s.button}\r\n            key={el}\r\n            type=\"button\"\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {el}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import s from './Section.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.sectionTitle}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n};\r\n","const Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.scss';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n};\r\nexport default Container;\r\n","import { useState } from 'react';\r\n\r\nimport Statistics from './components/Statistics';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Section from './components/Section';\r\nimport Notification from './components/Notification';\r\nimport Container from './components/Container';\r\n\r\nexport default function App() {\r\n  const [good, setgood] = useState(0);\r\n  const [neutral, setneutral] = useState(0);\r\n  const [bad, setbad] = useState(0);\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return countTotalFeedback()\r\n      ? Math.round((good / countTotalFeedback()) * 100)\r\n      : 0;\r\n  };\r\n\r\n  const onLeaveFeedback = ({ currentTarget }) => {\r\n    const feedbackType = currentTarget.innerText.toLowerCase();\r\n    switch (feedbackType) {\r\n      case 'good':\r\n        setgood(state => state + 1);\r\n        break;\r\n      case 'neutral':\r\n        setneutral(state => state + 1);\r\n        break;\r\n      case 'bad':\r\n        setbad(state => state + 1);\r\n        break;\r\n\r\n      default:\r\n        console.log('Unknown option');\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={['good', 'neutral', 'bad']}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n        />\r\n      </Section>\r\n      {countTotalFeedback() !== 0 ? (\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            options={{ good: good, bad: bad, neutral: neutral }}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './main.module.css';\r\n\r\nimport App from './App';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root'),\r\n// );\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}